    public static int[] mergeSort(int[] node1, int[] node2) {
        int[] array = new int[node1.length + node2.length];
        int counter = 0;
        for (int i = 0; i < node1.length; i++)
            array[counter++] = node1[i];
        for (int i = 0; i < node2.length; i++)
            array[counter++] = node2[i];

        array = mergSortArry(array);
        return array;
    }





    public static int[] mergSortArry(int[] array) {
        if (array.length <= 1)
            return array;

        int midPoint = array.length / 2;

        int[] leftSide = new int[midPoint];
        int[] rightSide;

        if (array.length % 2 == 0) {
            rightSide = new int[midPoint];
        } else {
            rightSide = new int[midPoint + 1];
        }

        for (int i = 0; i < midPoint; i++) {
            leftSide[i] = array[i];
        }

        for (int j = 0; j < rightSide.length; j++) {
            rightSide[j] = array[midPoint + j];
        }

        int[] resultArray = new int[array.length];

        leftSide = mergSortArry(leftSide);
        rightSide = mergSortArry(rightSide);

        resultArray = merge(leftSide, rightSide);
        return resultArray;
    }





        // Merges the left and right array in ascending order.
    private static int[] merge(int[] left, int[] right) {

        // Merged result array.
        int[] result = new int[left.length + right.length];

        // Declare and initialize pointers for all arrays.
        int leftPointer, rightPointer, resultPointer;
        leftPointer = rightPointer = resultPointer = 0;

        // While there are items in either array...
        while (leftPointer < left.length || rightPointer < right.length) {

            // If there are items in BOTH arrays...
            if (leftPointer < left.length && rightPointer < right.length) {

                // If left item is less than right item...
                if (left[leftPointer] < right[rightPointer]) {

                    result[resultPointer++] = left[leftPointer++];

                } else {

                    result[resultPointer++] = right[rightPointer++];

                }

            }

            // If there are only items in the left array...
            else if (leftPointer < left.length) {

                result[resultPointer++] = left[leftPointer++];

            }

            // If there are only items in the right array...
            else if (rightPointer < right.length) {

                result[resultPointer++] = right[rightPointer++];

            }

        }

        return result;

    }
